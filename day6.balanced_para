// balanced parathensis
#include<bits/stdc++.h>
#include<iostream>
#include<stack>
using namespace std;
bool isvalid(string s){
    int n=s.size(); // string ki length or size
    stack<char>st;
    bool ans=true; // variable ans
    for(int i=0;i<n;i++){
        if(s[i]=='{' or s[i]=='(' or  s[i]=='['){
            st.push(s[i]);
        }
        else if(s[i]==')'){
            if(!st.empty() and st.top()=='('){
                st.pop();
            }
            else{
                ans=false;
                break;
            }
        }
          else if(!st.empty() and s[i]==']'){
            if(st.top()=='['){
                st.pop();
            }
            else{
                ans=false;
                break;
            }
    }
      else if(!st.empty() and s[i]=='{'){
            if(st.top()=='}'){
                st.pop();
            }
            else{
                ans=false;
                break;
            }
       }
    }

   
    if(! st.empty())
      return false;

    return ans;
}

int main(){
    string s="{([])}";
    if(isvalid(s)){
        cout<<"valid string"<<endl;}
        else{
            cout<<"invalid string"<<endl;
        }
    }
